version: "3.8"

services:
  shop:
    container_name: shop
    build:
      context: .
      dockerfile: ./docker/shop/Dockerfile
    volumes:
      - ./shop:/app
    env_file:
      - shop/core/.env
    ports:
      - "8000:8000"
    networks:
      - shop_db_network
      - celery_network
      - redis_network
    depends_on:
      - db_shop
    restart: on-failure
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://0.0.0.0:8000/admin/login/"]
      interval: 1m
      timeout: 5s
      retries: 2


  celery_shop: &celery_shop
    container_name: celery_shop
    build:
      context: .
      dockerfile: ./docker/shop/Dockerfile
    env_file:
      - shop/core/.env
    volumes:
      - ./shop:/app
    networks:
      - shop_db_network
      - celery_network
      - redis_network
    depends_on:
      - db_shop
      - stock
      - redis
    command:
      - celery -A core worker -l INFO

  celery_beat:
    <<: *celery_shop
    container_name: celery_beat
    command:
      - celery -A core beat -l INFO


  stock:
    container_name: stock
    build:
      context: .
      dockerfile: ./docker/stock/Dockerfile
    volumes:
      - ./stock:/app
    networks:
      - stock_db_network
      - celery_network
    ports:
      - "8001:8000"
    expose:
      - "8000"
    depends_on:
      - db_stock
    environment:
      DB_NAME: "stock"
      DB_USER: "postgres"
      DB_PASSWORD: "postgres"
      DB_HOST: "db_stock"
      DB_PORT: "5432"
    restart: on-failure
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://0.0.0.0:8000/admin/login/"]
      interval: 1m
      timeout: 5s
      retries: 2

  db_shop:
    container_name: db_shop
    image: postgres:14-alpine
    volumes:
      - db_shop_volume:/var/lib/postgresql/data
    networks:
      - shop_db_network
    expose:
      - 5432
    restart: on-failure
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'
      POSTGRES_DB: 'shop'

  db_stock:
    container_name: db_stock
    image: postgres:14-alpine
    volumes:
      - db_stock_volume:/var/lib/postgresql/data
    networks:
      - stock_db_network
    expose:
      - 5432
    restart: on-failure
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'
      POSTGRES_DB: 'stock'

  redis:
    image: redis:7-alpine
    networks:
      - redis_network

  smtp-server:
    image: mailhog/mailhog
    expose:
      - 1025
      - 8025
    ports:
      - '1025:1025'
      - '8025:8025'
    networks:
      - celery_network

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    networks:
      - celery_network
      - redis_network
      - stock_db_network
      - shop_db_network
    restart: unless-stopped

  flower:
    image: mher/flower:0.9.5
    container_name: flower
    networks:
      - celery_network
      - redis_network
      - shop_db_network
      - stock_db_network
    expose:
      - 5555
    ports:
      - '5555:5555'
    depends_on:
      - celery_shop
      - redis
      - celery_beat
      - db_shop
      - db_stock
    command: ["celery -A flower --loglevel=info", "--broker=redis://redis:6379/0", "--broker_api=redis://redis:6379/0" ]

networks:
  shop_db_network:
  stock_db_network:
  celery_network:
  redis_network:

volumes:
  db_shop_volume:
  db_stock_volume: